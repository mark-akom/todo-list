(()=>{"use strict";var n={572:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;600&display=swap);"]),r.push([n.id,"/* google fonts - Outfit font */\n\n/* resets */\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Outfit', sans-serif;\n}\n\n/* styling of the header section */\n\n.app-header {\n    border: 1px solid blue;\n    height: 10vh;\n    display: flex;\n    align-items: center;\n}\n\n.app-heading {\n    font-weight: 600;\n    font-size: 32px;\n    padding-left: 40px;\n}\n\n/* styling of the content section */\n\n.content-body {\n    border: 1px solid;\n    display: flex;\n    height: 90vh;\n}\n\n.app-sidebar {\n    border: 1px solid green;\n    flex-basis: 22%;\n    padding-left: 40px;\n    padding-top: 20px;\n}\n\n.nav-links li{\n    list-style: none;\n    font-size: 19px;\n    padding: 8px 0;\n    font-weight: 400;\n    cursor: pointer;\n    margin-bottom: 4px;\n}\n\n.main-content {\n    border: 1px solid red;\n    flex-basis: 78%;\n    padding-top: 30px;\n    padding-left: 40px;\n}\n\n p {\n    font-size: 40px;\n}\n\n.project-title {\n    font-size: 20px;\n    font-weight: 400;\n}\n\n.project-list {\n    padding-left: 16px;\n    list-style: none;\n}\n\n.project-list li {\n    font-size: 17px;\n    padding: 4px;\n    margin-top: 4px;\n}\n\n.add-project-btn, .add-task-btn, .submit-task {\n    display: block;\n    margin-left: auto;\n    padding: 4px 12px;\n    font-family: inherit;\n    font-size: 16px;\n    background-color: transparent;\n    border: 1px solid gray;\n    border-radius: 4px;\n    margin-top: 12px;\n    margin-right: 12px;\n    cursor: pointer;\n}\n\n.add-task-btn {\n    margin-top: 24px;\n    margin-right: 150px;\n}\n\n\n/* styling for the modal effect */\n\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  }\n\n  /* Modal Content/Box */\n.modal-content {\n    background-color: #fefefe;\n    margin: 15% auto; /* 15% from the top and centered */\n    padding: 40px;\n    border: 1px solid #888;\n    width: 60%; /* Could be more or less, depending on screen size */\n}\n\n  /* styling of the add task form */\n\nform {\n    font-family: inherit;\n    padding-left: 50px;\n}\n\nform .form-data-container label, form .form-data-container p {\n    display: block;\n    font-size: 19px;\n    width: 120px;\n}\n\nform .form-data-container {\n    display: flex;\n    margin-top: 12px ;\n}\n\nform .form-data-container #title, form .form-data-container #description {\n    width: 350px;\n    padding: 4px 8px;\n    display: block;\n    font-family: inherit;\n    font-size: 19px;\n}\n\nform .form-data-container .priority-radio-btn-group label,\nform .form-data-container .save-to-radio-btn-group label {\n    display: inline-block;\n    width: auto;\n    margin: 0 24px 0 4px;\n}\n\n.submit-task {\n    margin: 0;\n    margin-top: 24px;\n    padding-left: 20px;\n    padding-right: 20px;\n}\n","",{version:3,sources:["webpack://./src/UI/styles.css"],names:[],mappings:"AAAA,+BAA+B;;AAG/B,WAAW;AACX;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,iCAAiC;AACrC;;AAEA,kCAAkC;;AAElC;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;AAEA,mCAAmC;;AAEnC;IACI,iBAAiB;IACjB,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,cAAc;IACd,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;CAEC;IACG,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;IACf,6BAA6B;IAC7B,sBAAsB;IACtB,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;;AAGA,iCAAiC;;AAEjC;IACI,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,OAAO;IACP,MAAM;IACN,WAAW,EAAE,eAAe;IAC5B,YAAY,EAAE,gBAAgB;IAC9B,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,iCAAiC,EAAE,qBAAqB;EAC1D;;EAEA,sBAAsB;AACxB;IACI,yBAAyB;IACzB,gBAAgB,EAAE,kCAAkC;IACpD,aAAa;IACb,sBAAsB;IACtB,UAAU,EAAE,oDAAoD;AACpE;;EAEE,iCAAiC;;AAEnC;IACI,oBAAoB;IACpB,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,cAAc;IACd,oBAAoB;IACpB,eAAe;AACnB;;AAEA;;IAEI,qBAAqB;IACrB,WAAW;IACX,oBAAoB;AACxB;;AAEA;IACI,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,mBAAmB;AACvB",sourcesContent:["/* google fonts - Outfit font */\n@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;600&display=swap');\n\n/* resets */\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Outfit', sans-serif;\n}\n\n/* styling of the header section */\n\n.app-header {\n    border: 1px solid blue;\n    height: 10vh;\n    display: flex;\n    align-items: center;\n}\n\n.app-heading {\n    font-weight: 600;\n    font-size: 32px;\n    padding-left: 40px;\n}\n\n/* styling of the content section */\n\n.content-body {\n    border: 1px solid;\n    display: flex;\n    height: 90vh;\n}\n\n.app-sidebar {\n    border: 1px solid green;\n    flex-basis: 22%;\n    padding-left: 40px;\n    padding-top: 20px;\n}\n\n.nav-links li{\n    list-style: none;\n    font-size: 19px;\n    padding: 8px 0;\n    font-weight: 400;\n    cursor: pointer;\n    margin-bottom: 4px;\n}\n\n.main-content {\n    border: 1px solid red;\n    flex-basis: 78%;\n    padding-top: 30px;\n    padding-left: 40px;\n}\n\n p {\n    font-size: 40px;\n}\n\n.project-title {\n    font-size: 20px;\n    font-weight: 400;\n}\n\n.project-list {\n    padding-left: 16px;\n    list-style: none;\n}\n\n.project-list li {\n    font-size: 17px;\n    padding: 4px;\n    margin-top: 4px;\n}\n\n.add-project-btn, .add-task-btn, .submit-task {\n    display: block;\n    margin-left: auto;\n    padding: 4px 12px;\n    font-family: inherit;\n    font-size: 16px;\n    background-color: transparent;\n    border: 1px solid gray;\n    border-radius: 4px;\n    margin-top: 12px;\n    margin-right: 12px;\n    cursor: pointer;\n}\n\n.add-task-btn {\n    margin-top: 24px;\n    margin-right: 150px;\n}\n\n\n/* styling for the modal effect */\n\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  }\n\n  /* Modal Content/Box */\n.modal-content {\n    background-color: #fefefe;\n    margin: 15% auto; /* 15% from the top and centered */\n    padding: 40px;\n    border: 1px solid #888;\n    width: 60%; /* Could be more or less, depending on screen size */\n}\n\n  /* styling of the add task form */\n\nform {\n    font-family: inherit;\n    padding-left: 50px;\n}\n\nform .form-data-container label, form .form-data-container p {\n    display: block;\n    font-size: 19px;\n    width: 120px;\n}\n\nform .form-data-container {\n    display: flex;\n    margin-top: 12px ;\n}\n\nform .form-data-container #title, form .form-data-container #description {\n    width: 350px;\n    padding: 4px 8px;\n    display: block;\n    font-family: inherit;\n    font-size: 19px;\n}\n\nform .form-data-container .priority-radio-btn-group label,\nform .form-data-container .save-to-radio-btn-group label {\n    display: inline-block;\n    width: auto;\n    margin: 0 24px 0 4px;\n}\n\n.submit-task {\n    margin: 0;\n    margin-top: 24px;\n    padding-left: 20px;\n    padding-right: 20px;\n}\n"],sourceRoot:""}]);const d=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(r[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);o&&r[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */"),r=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],d=0;d<n.length;d++){var s=n[d],l=o.base?s[0]+o.base:s[0],c=i[l]||0,A="".concat(l," ").concat(c);i[l]=c+1;var p=t(A),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(f);else{var m=a(f,o);o.byIndex=d,e.splice(d,0,{identifier:A,updater:m,references:1})}r.push(A)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var d=t(i[r]);e[d].references--}for(var s=o(n,a),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{const n=function(){const n={defaultFolder:[{a:"b"}]};return{createTask:function(n,e,t,o){return{id:"1",title:n,description:e,dueDate:t,priority:o,complete:!1}},returnAllProjects:function(){return n},saveTask:function(e,t="defaultFolder"){n[t].push(e)},updateStatus:function(e,t){let o=n[e].filter((n=>n.id===t))[0];o.complete=!o.complete},changePriority:function(e,t,o){n[e].filter((n=>n.id===t))[0].priority=o},deleteTask:function(e,t){let o=n[e];n[e]=o.filter((n=>n.id!==t)),console.log(o)},createProject:function(e){n[e]=[],console.log(n)}}}(),e=function(){const e=document.createElement("p");let t=function(){const e=n.returnAllProjects(),t=Object.keys(e);let o=0;return t.forEach((n=>{e[n].length>0&&o++})),o}();return e.textContent=t>0?"Some task available":"Looks like you are free. Add a new task",e},o=function(){let e=Object.keys(n.returnAllProjects());const t=document.createElement("ul");return t.classList.add("project-list"),e.forEach((n=>{if("defaultFolder"!==n){const e=document.createElement("li");e.textContent=n,t.appendChild(e)}})),t},a=function(){const n=document.createElement("div");return n.classList.add("modal"),n.addEventListener("click",(n=>{n.target.classList.contains("modal")&&(n.target.removeChild(n.target.firstElementChild),n.target.style.display="none")})),n},i=function(){let e=Object.keys(n.returnAllProjects());const t=document.createElement("div");t.classList.add("modal-content");const o=document.createElement("form");o.classList.add("add-task-form");const a=document.createElement("div");a.classList.add("form-data-container");const i=document.createElement("label");i.htmlFor="title",i.textContent="Title:";const r=document.createElement("input");r.type="text",r.id="title",a.appendChild(i),a.appendChild(r);const d=document.createElement("div");d.classList.add("form-data-container");const s=document.createElement("label");s.htmlFor="description",s.textContent="Description:";const l=document.createElement("textarea");l.id="description",d.appendChild(s),d.appendChild(l);const c=document.createElement("div");c.classList.add("form-data-container");const A=document.createElement("p");A.textContent="Save to:";const p=document.createElement("div");p.classList.add("save-to-radio-btn-group"),e.forEach((n=>{const e=document.createElement("input"),t=document.createElement("label");e.type="radio",e.id=n,e.value=n,e.name="save_to",t.htmlFor=n,t.textContent=n,p.appendChild(e),p.appendChild(t)})),c.appendChild(A),c.appendChild(p);const f=document.createElement("div");f.classList.add("form-data-container");const m=document.createElement("p");m.textContent="Priority:";const u=document.createElement("div");u.classList.add("priority-radio-btn-group"),["high","normal","low"].forEach((n=>{const e=document.createElement("input"),t=document.createElement("label");e.type="radio",e.id=n,e.value=n,e.name="priority",t.htmlFor=n,t.textContent=n,u.appendChild(e),u.appendChild(t)})),f.appendChild(m),f.appendChild(u);const C=document.createElement("div");C.classList.add("form-data-container");const g=document.createElement("label");g.htmlFor="due-date",g.textContent="Due Date:";const h=document.createElement("input");h.classList.add("calender-due-date"),h.id="due-date",h.type="date",C.appendChild(g),C.appendChild(h);const B=document.createElement("button");return B.classList.add("submit-task"),B.textContent="Add",B.addEventListener("click",(n=>{n.preventDefault(),console.log("added")})),o.appendChild(a),o.appendChild(d),o.appendChild(c),o.appendChild(f),o.appendChild(C),o.appendChild(B),t.appendChild(o),t};var r=t(379),d=t.n(r),s=t(795),l=t.n(s),c=t(569),A=t.n(c),p=t(565),f=t.n(p),m=t(216),u=t.n(m),C=t(589),g=t.n(C),h=t(572),B={};B.styleTagTransform=g(),B.setAttributes=f(),B.insert=A().bind(null,"head"),B.domAPI=l(),B.insertStyleElement=u(),d()(h.Z,B),h.Z&&h.Z.locals&&h.Z.locals;const x=document.querySelector("#app-body");x.appendChild(function(){const n=document.createElement("div"),e=document.createElement("h1");return e.textContent="Simplr",e.classList.add("app-heading"),n.classList.add("app-header"),n.appendChild(e),n}()),x.appendChild(function(){const t=document.createElement("div");t.classList.add("content-body");const r=document.createElement("div");r.classList.add("app-sidebar");const d=document.createElement("ul");d.classList.add("nav-links"),["Home"].forEach((n=>{const e=document.createElement("li");e.textContent=n,d.appendChild(e)}));const s=document.createElement("div");s.classList.add("project-section");const l=document.createElement("h2");l.classList.add("project-title"),l.textContent="Projects";const c=document.createElement("button");c.classList.add("add-project-btn"),c.textContent="Add Project",c.addEventListener("click",(()=>{let e=prompt("Enter the project name.");n.createProject(e);const t=document.querySelector(".project-list"),a=t.parentNode,i=a.lastElementChild;a.removeChild(t),a.insertBefore(o(),i)})),s.appendChild(l),s.appendChild(o()),s.appendChild(c);const A=document.createElement("div");A.classList.add("main-content");const p=document.createElement("button");return p.classList.add("add-task-btn"),p.textContent="Add A Task",p.addEventListener("click",(()=>{const n=document.querySelector(".modal");n.appendChild(i()),n.style.display="block"})),A.appendChild(e()),A.appendChild(p),A.appendChild(a()),r.appendChild(d),r.appendChild(s),t.appendChild(r),t.appendChild(A),t}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,