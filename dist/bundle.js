(()=>{"use strict";var n={572:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;600&display=swap);"]),a.push([n.id,"/* google fonts - Outfit font */\n\n/* resets */\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Outfit', sans-serif;\n}\n\n/* styling of the header section */\n\n.app-header {\n    border: 1px solid blue;\n    height: 10vh;\n    display: flex;\n    align-items: center;\n}\n\n.app-heading {\n    font-weight: 600;\n    font-size: 32px;\n    padding-left: 40px;\n}\n\n/* styling of the content section */\n\n.content-body {\n    border: 1px solid;\n    display: flex;\n    height: 90vh;\n}\n\n.app-sidebar {\n    border: 1px solid green;\n    flex-basis: 22%;\n    padding-left: 40px;\n    padding-top: 20px;\n}\n\n.nav-links li{\n    list-style: none;\n    font-size: 19px;\n    padding: 8px 0;\n    font-weight: 400;\n    cursor: pointer;\n    margin-bottom: 4px;\n}\n\n.main-content {\n    border: 1px solid red;\n    flex-basis: 78%;\n    padding-top: 30px;\n    padding-left: 40px;\n}\n\n.main-content p {\n    font-size: 40px;\n}\n\n.project-title {\n    font-size: 20px;\n    font-weight: 400;\n}\n\n.project-list {\n    padding-left: 16px;\n    list-style: none;\n}\n\n.project-list li {\n    font-size: 17px;\n    padding: 4px;\n    margin-top: 4px;\n}\n\n.add-project-btn {\n    display: block;\n    margin-left: auto;\n    padding: 4px 12px;\n    font-family: inherit;\n    font-size: 16px;\n    background-color: transparent;\n    border: 1px solid gray;\n    border-radius: 4px;\n    margin-top: 12px;\n    margin-right: 12px;\n    cursor: pointer;\n}","",{version:3,sources:["webpack://./src/UI/styles.css"],names:[],mappings:"AAAA,+BAA+B;;AAG/B,WAAW;AACX;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,iCAAiC;AACrC;;AAEA,kCAAkC;;AAElC;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;AAEA,mCAAmC;;AAEnC;IACI,iBAAiB;IACjB,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,cAAc;IACd,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;IACf,6BAA6B;IAC7B,sBAAsB;IACtB,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;AACnB",sourcesContent:["/* google fonts - Outfit font */\n@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;600&display=swap');\n\n/* resets */\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Outfit', sans-serif;\n}\n\n/* styling of the header section */\n\n.app-header {\n    border: 1px solid blue;\n    height: 10vh;\n    display: flex;\n    align-items: center;\n}\n\n.app-heading {\n    font-weight: 600;\n    font-size: 32px;\n    padding-left: 40px;\n}\n\n/* styling of the content section */\n\n.content-body {\n    border: 1px solid;\n    display: flex;\n    height: 90vh;\n}\n\n.app-sidebar {\n    border: 1px solid green;\n    flex-basis: 22%;\n    padding-left: 40px;\n    padding-top: 20px;\n}\n\n.nav-links li{\n    list-style: none;\n    font-size: 19px;\n    padding: 8px 0;\n    font-weight: 400;\n    cursor: pointer;\n    margin-bottom: 4px;\n}\n\n.main-content {\n    border: 1px solid red;\n    flex-basis: 78%;\n    padding-top: 30px;\n    padding-left: 40px;\n}\n\n.main-content p {\n    font-size: 40px;\n}\n\n.project-title {\n    font-size: 20px;\n    font-weight: 400;\n}\n\n.project-list {\n    padding-left: 16px;\n    list-style: none;\n}\n\n.project-list li {\n    font-size: 17px;\n    padding: 4px;\n    margin-top: 4px;\n}\n\n.add-project-btn {\n    display: block;\n    margin-left: auto;\n    padding: 4px 12px;\n    font-family: inherit;\n    font-size: 16px;\n    background-color: transparent;\n    border: 1px solid gray;\n    border-radius: 4px;\n    margin-top: 12px;\n    margin-right: 12px;\n    cursor: pointer;\n}"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var p=0;p<n.length;p++){var d=[].concat(n[p]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],p=o.base?c[0]+o.base:c[0],d=i[p]||0,l="".concat(p," ").concat(d);i[p]=d+1;var A=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var f=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var c=o(n,r),p=0;p<i.length;p++){var d=t(i[p]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{const n=function(){const n={defaultFolder:[{a:"b"}]};return{createTask:function(n,e,t,o){return{id:"1",title:n,description:e,dueDate:t,priority:o,complete:!1}},returnAllProjects:function(){return n},saveTask:function(e,t="defaultFolder"){n[t].push(e)},updateStatus:function(e,t){let o=n[e].filter((n=>n.id===t))[0];o.complete=!o.complete},changePriority:function(e,t,o){n[e].filter((n=>n.id===t))[0].priority=o},deleteTask:function(e,t){let o=n[e];n[e]=o.filter((n=>n.id!==t)),console.log(o)},createProject:function(e){n[e]=[],console.log(n)}}}(),e=function(){const e=document.createElement("p");let t=function(){const e=n.returnAllProjects(),t=Object.keys(e);let o=0;return t.forEach((n=>{e[n].length>0&&o++})),o}();return e.textContent=t>0?"Some task available":"Looks like you are free. Add a new task",e},o=function(){let e=Object.keys(n.returnAllProjects());const t=document.createElement("ul");return t.classList.add("project-list"),e.forEach((n=>{if("defaultFolder"!==n){const e=document.createElement("li");e.textContent=n,t.appendChild(e)}})),t};var r=t(379),i=t.n(r),a=t(795),s=t.n(a),c=t(569),p=t.n(c),d=t(565),l=t.n(d),A=t(216),u=t.n(A),f=t(589),m=t.n(f),g=t(572),h={};h.styleTagTransform=m(),h.setAttributes=l(),h.insert=p().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),i()(g.Z,h),g.Z&&g.Z.locals&&g.Z.locals;const C=document.querySelector("#app-body");C.appendChild(function(){const n=document.createElement("div"),e=document.createElement("h1");return e.textContent="Simplr",e.classList.add("app-heading"),n.classList.add("app-header"),n.appendChild(e),n}()),C.appendChild(function(){const t=document.createElement("div");t.classList.add("content-body");const r=document.createElement("div");r.classList.add("app-sidebar");const i=document.createElement("ul");i.classList.add("nav-links"),["Home"].forEach((n=>{const e=document.createElement("li");e.textContent=n,i.appendChild(e)}));const a=document.createElement("div");a.classList.add("project-section");const s=document.createElement("h2");s.classList.add("project-title"),s.textContent="Projects";const c=document.createElement("button");c.classList.add("add-project-btn"),c.textContent="Add Project",c.addEventListener("click",(()=>{let e=prompt("Enter the project name.");n.createProject(e);const t=document.querySelector(".project-list"),r=t.parentNode,i=r.lastElementChild;r.removeChild(t),r.insertBefore(o(),i)})),a.appendChild(s),a.appendChild(o()),a.appendChild(c);const p=document.createElement("div");return p.classList.add("main-content"),p.appendChild(e()),r.appendChild(i),r.appendChild(a),t.appendChild(r),t.appendChild(p),t}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,