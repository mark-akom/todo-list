(()=>{"use strict";var n={572:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;600&display=swap);"]),i.push([n.id,"/* google fonts - Outfit font */\n\n/* resets */\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Outfit', sans-serif;\n}\n\n/* styling of the header section */\n\n.app-header {\n    border: 1px solid blue;\n    height: 10vh;\n    display: flex;\n    align-items: center;\n}\n\n.app-heading {\n    font-weight: 600;\n    font-size: 32px;\n    padding-left: 40px;\n}\n\n/* styling of the content section */\n\n.content-body {\n    border: 1px solid;\n    display: flex;\n    height: 90vh;\n}\n\n.app-sidebar {\n    border: 1px solid green;\n    flex-basis: 22%;\n    padding-left: 40px;\n    padding-top: 20px;\n}\n\n.nav-links li{\n    list-style: none;\n    font-size: 19px;\n    padding: 8px 0;\n    font-weight: 400;\n    cursor: pointer;\n    margin-bottom: 4px;\n}\n\n.main-content {\n    border: 1px solid red;\n    flex-basis: 78%;\n    padding-top: 30px;\n    padding-left: 40px;\n}\n\n.main-content p {\n    font-size: 40px;\n}\n\n.project-title {\n    font-size: 20px;\n    font-weight: 400;\n}\n\n.project-list {\n    padding-left: 16px;\n    list-style: none;\n}\n\n.project-list li {\n    font-size: 17px;\n    padding: 4px;\n    margin-top: 4px;\n}\n\n.add-project-btn, .add-task-btn {\n    display: block;\n    margin-left: auto;\n    padding: 4px 12px;\n    font-family: inherit;\n    font-size: 16px;\n    background-color: transparent;\n    border: 1px solid gray;\n    border-radius: 4px;\n    margin-top: 12px;\n    margin-right: 12px;\n    cursor: pointer;\n}\n\n.add-task-btn {\n    margin-top: 24px;\n    margin-right: 150px;\n}\n\n\n/* styling for the modal effect */\n\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  }","",{version:3,sources:["webpack://./src/UI/styles.css"],names:[],mappings:"AAAA,+BAA+B;;AAG/B,WAAW;AACX;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,iCAAiC;AACrC;;AAEA,kCAAkC;;AAElC;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;AAEA,mCAAmC;;AAEnC;IACI,iBAAiB;IACjB,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,cAAc;IACd,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;IACf,6BAA6B;IAC7B,sBAAsB;IACtB,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;;AAGA,iCAAiC;;AAEjC;IACI,aAAa,EAAE,sBAAsB;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,OAAO;IACP,MAAM;IACN,WAAW,EAAE,eAAe;IAC5B,YAAY,EAAE,gBAAgB;IAC9B,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,iCAAiC,EAAE,qBAAqB;EAC1D",sourcesContent:["/* google fonts - Outfit font */\n@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;600&display=swap');\n\n/* resets */\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Outfit', sans-serif;\n}\n\n/* styling of the header section */\n\n.app-header {\n    border: 1px solid blue;\n    height: 10vh;\n    display: flex;\n    align-items: center;\n}\n\n.app-heading {\n    font-weight: 600;\n    font-size: 32px;\n    padding-left: 40px;\n}\n\n/* styling of the content section */\n\n.content-body {\n    border: 1px solid;\n    display: flex;\n    height: 90vh;\n}\n\n.app-sidebar {\n    border: 1px solid green;\n    flex-basis: 22%;\n    padding-left: 40px;\n    padding-top: 20px;\n}\n\n.nav-links li{\n    list-style: none;\n    font-size: 19px;\n    padding: 8px 0;\n    font-weight: 400;\n    cursor: pointer;\n    margin-bottom: 4px;\n}\n\n.main-content {\n    border: 1px solid red;\n    flex-basis: 78%;\n    padding-top: 30px;\n    padding-left: 40px;\n}\n\n.main-content p {\n    font-size: 40px;\n}\n\n.project-title {\n    font-size: 20px;\n    font-weight: 400;\n}\n\n.project-list {\n    padding-left: 16px;\n    list-style: none;\n}\n\n.project-list li {\n    font-size: 17px;\n    padding: 4px;\n    margin-top: 4px;\n}\n\n.add-project-btn, .add-task-btn {\n    display: block;\n    margin-left: auto;\n    padding: 4px 12px;\n    font-family: inherit;\n    font-size: 16px;\n    background-color: transparent;\n    border: 1px solid gray;\n    border-radius: 4px;\n    margin-top: 12px;\n    margin-right: 12px;\n    cursor: pointer;\n}\n\n.add-task-btn {\n    margin-top: 24px;\n    margin-right: 150px;\n}\n\n\n/* styling for the modal effect */\n\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  }"],sourceRoot:""}]);const d=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],d=0;d<n.length;d++){var s=n[d],c=o.base?s[0]+o.base:s[0],l=r[c]||0,p="".concat(c," ").concat(l);r[c]=l+1;var A=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var f=a(u,o);o.byIndex=d,e.splice(d,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var d=t(r[i]);e[d].references--}for(var s=o(n,a),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{const n=function(){const n={defaultFolder:[{a:"b"}]};return{createTask:function(n,e,t,o){return{id:"1",title:n,description:e,dueDate:t,priority:o,complete:!1}},returnAllProjects:function(){return n},saveTask:function(e,t="defaultFolder"){n[t].push(e)},updateStatus:function(e,t){let o=n[e].filter((n=>n.id===t))[0];o.complete=!o.complete},changePriority:function(e,t,o){n[e].filter((n=>n.id===t))[0].priority=o},deleteTask:function(e,t){let o=n[e];n[e]=o.filter((n=>n.id!==t)),console.log(o)},createProject:function(e){n[e]=[],console.log(n)}}}(),e=function(){const e=document.createElement("p");let t=function(){const e=n.returnAllProjects(),t=Object.keys(e);let o=0;return t.forEach((n=>{e[n].length>0&&o++})),o}();return e.textContent=t>0?"Some task available":"Looks like you are free. Add a new task",e},o=function(){let e=Object.keys(n.returnAllProjects());const t=document.createElement("ul");return t.classList.add("project-list"),e.forEach((n=>{if("defaultFolder"!==n){const e=document.createElement("li");e.textContent=n,t.appendChild(e)}})),t},a=function(){const n=document.createElement("div");return n.classList.add("modal"),n.addEventListener("click",(()=>{n.removeChild(n.firstElementChild),n.style.display="none"})),n},r=function(){let e=Object.keys(n.returnAllProjects());const t=document.createElement("div");t.classList.add("modal-content");const o=document.createElement("form");o.classList.add("add-task-form");const a=document.createElement("input");a.type="text";const r=document.createElement("textarea"),i=document.createElement("p");i.textContent="Save to:";const d=document.createElement("div");i.classList.add("save-to-radio-btn-group"),e.forEach((n=>{const e=document.createElement("input"),t=document.createElement("label");e.type="radio",e.id=n,e.value=n,e.name="save_to",t.htmlFor=n,t.textContent=n,d.appendChild(e),d.appendChild(t)}));const s=document.createElement("p");s.textContent="Priority:";const c=document.createElement("div");c.classList.add("priority-radio-btn-group"),["high","normal","low"].forEach((n=>{const e=document.createElement("input"),t=document.createElement("label");e.type="radio",e.id=n,e.value=n,e.name="priority",t.htmlFor=n,t.textContent=n,c.appendChild(e),c.appendChild(t)}));const l=document.createElement("input");return l.classList.add("calender-due-date"),l.type="date",o.appendChild(a),o.appendChild(r),o.appendChild(i),o.appendChild(d),o.appendChild(s),o.appendChild(c),o.appendChild(l),t.appendChild(o),t};var i=t(379),d=t.n(i),s=t(795),c=t.n(s),l=t(569),p=t.n(l),A=t(565),u=t.n(A),f=t(216),m=t.n(f),C=t(589),h=t.n(C),g=t(572),B={};B.styleTagTransform=h(),B.setAttributes=u(),B.insert=p().bind(null,"head"),B.domAPI=c(),B.insertStyleElement=m(),d()(g.Z,B),g.Z&&g.Z.locals&&g.Z.locals;const x=document.querySelector("#app-body");x.appendChild(function(){const n=document.createElement("div"),e=document.createElement("h1");return e.textContent="Simplr",e.classList.add("app-heading"),n.classList.add("app-header"),n.appendChild(e),n}()),x.appendChild(function(){const t=document.createElement("div");t.classList.add("content-body");const i=document.createElement("div");i.classList.add("app-sidebar");const d=document.createElement("ul");d.classList.add("nav-links"),["Home"].forEach((n=>{const e=document.createElement("li");e.textContent=n,d.appendChild(e)}));const s=document.createElement("div");s.classList.add("project-section");const c=document.createElement("h2");c.classList.add("project-title"),c.textContent="Projects";const l=document.createElement("button");l.classList.add("add-project-btn"),l.textContent="Add Project",l.addEventListener("click",(()=>{let e=prompt("Enter the project name.");n.createProject(e);const t=document.querySelector(".project-list"),a=t.parentNode,r=a.lastElementChild;a.removeChild(t),a.insertBefore(o(),r)})),s.appendChild(c),s.appendChild(o()),s.appendChild(l);const p=document.createElement("div");p.classList.add("main-content");const A=document.createElement("button");return A.classList.add("add-task-btn"),A.textContent="Add A Task",A.addEventListener("click",(()=>{const n=document.querySelector(".modal");n.appendChild(r()),n.style.display="block"})),p.appendChild(e()),p.appendChild(A),p.appendChild(a()),i.appendChild(d),i.appendChild(s),t.appendChild(i),t.appendChild(p),t}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,